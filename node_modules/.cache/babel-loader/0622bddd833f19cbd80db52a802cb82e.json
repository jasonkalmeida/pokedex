{"ast":null,"code":"import _slicedToArray from \"/Users/jasonkalmeida/Documents/GitHub/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jasonkalmeida/Documents/GitHub/pokedex/src/App.js\";\nimport React, { useState, useEffect } from 'react'; //import logo from './logo.svg';\n\nimport './App.scss';\n\nfunction SearchBar(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        suggest = _useState2[0],\n        setSuggest = _useState2[1];\n\n  const listPoke = suggest.map((sug, index) => React.createElement(\"li\", {\n    className: \"suggestItem\",\n    onClick: event => props.updateCurrent(event.target.innerHTML.charAt(0).toUpperCase() + event.target.innerHTML.slice(1).toLowerCase()),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, sug));\n  useEffect(() => {\n    let tempSug = findSug(props.currentSearch, props.pokeNames); //console.log(tempSug);\n\n    setSuggest(tempSug);\n  }, [props.currentSearch, props.pokeNames]);\n  return React.createElement(\"div\", {\n    className: \"searchBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"searchInput\",\n    type: \"text\",\n    value: props.currentSearch,\n    onChange: event => props.updateCurrent(event.target.value),\n    placeholder: \"Search Pok\\xE9dex...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), suggest.length > 0 && props.currentPoke == null && React.createElement(\"ul\", {\n    id: \"suggestList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, listPoke));\n}\n\nfunction findSug(word, names) {\n  /*for(let name in names){\n    console.log(name);\n  }*/\n  var matches = [];\n\n  if (word.length !== 0) {\n    names.forEach(name => {\n      //console.log(name);\n      if (name.indexOf(word.toLowerCase()) === 0 && name.length !== word.length) {\n        matches.push(name);\n      }\n    });\n  }\n\n  return matches;\n}\n\nfunction Dashboard(props) {\n  if (props.currentPoke != null) {\n    const listTypes = props.currentPoke['types'].map(type => React.createElement(\"li\", {\n      id: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, type.toUpperCase()));\n    return React.createElement(\"div\", {\n      className: \"dashBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, props.currentName), React.createElement(\"img\", {\n      alt: props.currentName,\n      src: props.currentPoke['sprites']['front_default'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      class: \"pokeType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, listTypes));\n  } else {\n    return null;\n  }\n}\n\nfunction App() {\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pokemon = _useState4[0],\n        setPokemon = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        pokeNames = _useState6[0],\n        setNames = _useState6[1]; //ADD EASTER EGGS\n\n\n  useEffect(() => {\n    //console.log(\"In here\");\n    fetch('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=151').then(res => res.json()).then(data => {\n      var holdNames = [];\n\n      for (let item of data.results) {\n        holdNames.push(item['name']);\n      }\n\n      setNames(holdNames);\n      setPokemon(data.results);\n    });\n  }, []);\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentPoke = _useState8[0],\n        setCurrentPoke = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        currentSearch = _useState10[0],\n        setCurrentSearch = _useState10[1];\n\n  useEffect(() => {\n    if (pokeNames !== null && pokeNames.indexOf(currentSearch.toLowerCase()) !== -1) {\n      //setCurrentPoke(currentSearch.charAt(0).toUpperCase() + currentSearch.slice(1).toLowerCase());\n      //console.log(\"Found a pokemon\");\n      let id = pokeNames.indexOf(currentSearch.toLowerCase()) + 1;\n      fetch('https://pokeapi.co/api/v2/pokemon/' + id).then(res => res.json()).then(data => setCurrentPoke(data));\n    } else {\n      setCurrentPoke(null);\n    }\n  }, [currentSearch, pokeNames]);\n\n  if (!pokemon) {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    currentPoke: currentPoke,\n    pokeNames: pokeNames,\n    currentSearch: currentSearch,\n    updateCurrent: newSearch => setCurrentSearch(newSearch),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    currentPoke: currentPoke,\n    currentName: currentPoke != null ? currentPoke['name'].charAt(0).toUpperCase() + currentPoke['name'].slice(1).toLowerCase() : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jasonkalmeida/Documents/GitHub/pokedex/src/App.js"],"names":["React","useState","useEffect","SearchBar","props","suggest","setSuggest","listPoke","map","sug","index","event","updateCurrent","target","innerHTML","charAt","toUpperCase","slice","toLowerCase","tempSug","findSug","currentSearch","pokeNames","value","length","currentPoke","word","names","matches","forEach","name","indexOf","push","Dashboard","listTypes","type","currentName","App","pokemon","setPokemon","setNames","fetch","then","res","json","data","holdNames","item","results","setCurrentPoke","setCurrentSearch","id","newSearch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import logo from './logo.svg';\nimport './App.scss';\n\nfunction SearchBar(props){\n  const [suggest, setSuggest] = useState([]);\n  const listPoke = suggest.map((sug, index) =>\n    <li className=\"suggestItem\" onClick={(event)=> props.updateCurrent(event.target.innerHTML.charAt(0).toUpperCase() + event.target.innerHTML.slice(1).toLowerCase())} key={index}>{sug}</li>\n  );\n\n  useEffect(() => {\n    let tempSug = findSug(props.currentSearch, props.pokeNames);\n    //console.log(tempSug);\n    setSuggest(tempSug);\n  }, [props.currentSearch, props.pokeNames]);\n\n\n  return(\n    <div className=\"searchBar\">\n      <input className=\"searchInput\" type=\"text\" value={props.currentSearch} onChange={(event) => props.updateCurrent(event.target.value)} placeholder=\"Search Pokédex...\"></input>\n      {\n        suggest.length > 0 && props.currentPoke == null &&\n          <ul id=\"suggestList\">\n            {listPoke}\n          </ul>\n      }\n    </div>\n  )\n}\n\nfunction findSug(word, names){\n  /*for(let name in names){\n    console.log(name);\n  }*/\n\n  var matches = [];\n  if(word.length !== 0)\n  {\n    names.forEach((name) => {\n      //console.log(name);\n      if(name.indexOf(word.toLowerCase()) === 0 && name.length !== word.length){\n        matches.push(name);\n      }\n    });\n  }\n\n  return matches;\n}\n\nfunction Dashboard(props){\n\n  if(props.currentPoke != null)\n  {\n\n    const listTypes = props.currentPoke['types'].map((type) =>\n      <li id={type}>{type.toUpperCase()}</li>\n    );\n\n    return(\n      <div className = \"dashBoard\">\n        <h1>{props.currentName}</h1>\n        <img alt={props.currentName} src={props.currentPoke['sprites']['front_default']}></img>\n        <ul class = \"pokeType\">\n          {listTypes}\n        </ul>\n      </div>\n    );\n  }\n  else {\n    return(\n      null\n    );\n  }\n\n}\n\nfunction App() {\n  const [pokemon, setPokemon] = useState(null);\n  const [pokeNames, setNames] = useState(null)\n  //ADD EASTER EGGS\n  useEffect(() => {\n    //console.log(\"In here\");\n    fetch('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=151')\n      .then(res=>res.json())\n      .then(data=>{\n        var holdNames = []\n        for(let item of data.results){\n          holdNames.push(item['name']);\n        }\n        setNames(holdNames);\n        setPokemon(data.results);\n      });\n\n  }, []);\n\n\n  const [currentPoke, setCurrentPoke] = useState(null);\n  const [currentSearch, setCurrentSearch] = useState('');\n\n  useEffect(() => {\n\n    if(pokeNames !== null && pokeNames.indexOf(currentSearch.toLowerCase()) !== -1){\n      //setCurrentPoke(currentSearch.charAt(0).toUpperCase() + currentSearch.slice(1).toLowerCase());\n      //console.log(\"Found a pokemon\");\n      let id = pokeNames.indexOf(currentSearch.toLowerCase()) + 1;\n      fetch('https://pokeapi.co/api/v2/pokemon/' + id)\n        .then(res=>res.json())\n        .then(data=>setCurrentPoke(data));\n\n    } else {\n      setCurrentPoke(null);\n    }\n\n  }, [currentSearch, pokeNames]);\n\n\n\n  if(! pokemon){\n    return(\n      <h1>Loading</h1>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchBar currentPoke={currentPoke} pokeNames ={pokeNames} currentSearch={currentSearch} updateCurrent={(newSearch) => setCurrentSearch(newSearch)} />\n      <Dashboard currentPoke={currentPoke} currentName = {(currentPoke != null) ? currentPoke['name'].charAt(0).toUpperCase() + currentPoke['name'].slice(1).toLowerCase() : \"\"} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}